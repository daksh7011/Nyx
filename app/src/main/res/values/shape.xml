<!--
  ~ MIT License
  ~
  ~ Copyright (c)  2020.  TechnoWolf FOSS
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  ~
  -->

<resources>

    <!--Shape-->

    <!--Material allows theming of a component’s shape through the customization of corner -->
    <!--style and radius size. To systematically apply shape throughout your app, it helps to -->
    <!--understand that components are categorized by size, grouped into categories of small, -->
    <!--medium and large. Each component size group can be themed by overriding the Material -->
    <!--Components attributes ?shapeAppearanceSmallComponent, ?shapeAppearanceMediumComponent -->
    <!--and ?shapeAppearanceLargeComponent in your app's theme. Those attributes are already -->
    <!--defined as default styles overridden for you in themes.xml and point to the styles in -->
    <!--this file.-->

    <!--Experiment with ShapeAppearance properties such as cornerFamily (either ‘cut’ or -->
    <!--‘rounded’) and corner size. Alternatively, customize each ShapeAppearance on a -->
    <!--per-corner basis with cornerFamilyTopLeft, cornerFamilyTopRight, cornerFamilyBottomLeft, -->
    <!--cornerFamilyBottomRight and cornerSizeTopRight, cornerSizeTopLeft, cornerSizeBottomLeft -->
    <!--and cornerSizeBottomRight.-->

    <!--Shape Appearance for small components like chips, buttons, text fields and FABs-->
    <style name="ShapeAppearance.AppTheme.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <!--Your custom shape here-->
    </style>

    <!--Shape Appearance for medium components like cards, alert dialogs-->
    <style name="ShapeAppearance.AppTheme.MediumComponent" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <!--Your custom shape here-->
    </style>

    <!--Shape Appearance for large components like side and bottom navigation drawers-->
    <style name="ShapeAppearance.AppTheme.LargeComponent" parent="ShapeAppearance.MaterialComponents.LargeComponent">
        <!--Your custom shape here-->
    </style>

</resources>
